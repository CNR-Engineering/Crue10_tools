<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	targetNamespace="http://www.fudaa.fr/xsd/crue" xmlns="http://www.fudaa.fr/xsd/crue">

	<xs:annotation>
		<!-- La Version et la Release doivent être mises à jour à chaque modification de cette xsd -->
		<xs:documentation xml:lang="fr">
			Version 1.2 Release 1
			schema incomplet: voir le meme sans le préfixe frag-
			pour la validation par fichier
		</xs:documentation>
	</xs:annotation>

	<!-- Type de régulation -->
	<xs:element name="TypeRegul">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="XX" />
				<xs:enumeration value="BY" />
				<xs:enumeration value="BV" />
				<xs:enumeration value="DM" />
				<xs:enumeration value="AV" />
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
	<!-- Paramètres de régulation communs -->
	<!-- - Pas de temps de régulation; à défaut, lancement à chaque pas de temps de calcul -->
	<!-- - Débit à utiliser pour le calcul du mode de crue: montée (M) ou décrue (D) -->
	<!-- - Vitesse [m/h] de rattrapage du plan de consigne en cas de basculement de point de réglage -->
	<xs:complexType name="TypeParamLocal">
		<xs:attribute name="Param" type="xs:IDREF" use="required" />
	</xs:complexType>
	<xs:element name="ParamRegulCommun">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="PdtRegul" type="TypeDuree" minOccurs="0" />
				<xs:element name="Qmode" type="TypeParamLocal" minOccurs="0" />
				<xs:element name="DvzRattrap" type="xs:double" minOccurs="0" />
				<xs:element name="Dqmode" type="xs:double" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- Définition de débits à utiliser pour la régulation -->
	<!-- Somme pondérée de débits sur des sections: -->
	<!-- - Qabs: sur une section en absolu -->
	<!-- - Qdif: sur deux sections en différentiel (permet de récupérer le débit injecté à un noeud par différences des sections amont et aval) -->
	<!-- - QabsExt: sur une section en absolu, dans un fichier de résultats externe, pour l'enchaînement -->
	<xs:complexType name="TypeQabs">
		<xs:attribute name="NomRef" type="TypeForAttributeNomRefSection" use="required" />
		<xs:attribute name="Pond" type="xs:double" default="1" />
	</xs:complexType>
	<xs:complexType name="TypeQdif">
		<xs:attribute name="NomRefAm" type="TypeForAttributeNomRefSection" use="required" />
		<xs:attribute name="NomRefAv" type="TypeForAttributeNomRefSection" use="required" />
		<xs:attribute name="Pond" type="xs:double" default="1" />
	</xs:complexType>
	<xs:complexType name="TypeQabsExt">
		<xs:attribute name="NomRef" type="TypeForAttributeNomRefSection" use="required" />
		<xs:attribute name="ResCalcTrans" type="TypeForAttributeNomRefCalc" use="optional" />
		<xs:attribute name="NomFic" type="xs:token" use="required" />
		<xs:attribute name="Pond" type="xs:double" default="1" />
	</xs:complexType>
	<xs:complexType name="TypeDefQregul">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Qabs" type="TypeQabs" />
			<xs:element name="Qdif" type="TypeQdif" />
			<xs:element name="QabsExt" type="TypeQabsExt" />
		</xs:choice>
		<xs:attribute name="Nom" type="TypeForAttributeNom" use="required" />
	</xs:complexType>
	<xs:element name="DefQreguls">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DefQregul" type="TypeDefQregul" maxOccurs="unbounded" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!-- Définition des lois de régulation. A analyser dans l'ordre donné; la première LoiRegul trouvée est prise par défaut si aucune ne remplit les conditions -->
	<!-- Une LoiRegul se compose de conditions d'application de cette loi, et de paramètres à utiliser pour son application -->
	<xs:complexType name="TypeCondQinf">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="NomRef" type="xs:IDREF" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="TypeCondQsup">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="NomRef" type="xs:IDREF" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="TypeCondZinf">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="NomRef" type="TypeForAttributeNomRefSection" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="TypeMode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="M" />
			<xs:enumeration value="D" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TypeCondMode">
		<xs:attribute name="Mode" type="TypeMode" use="required"/>
	</xs:complexType>
	<xs:element name="CondRegul">
		<xs:complexType>
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:element name="CondQinf" type="TypeCondQinf" />
				<xs:element name="CondQsup" type="TypeCondQsup" />
				<xs:element name="CondZinf" type="TypeCondZinf" />
				<xs:element name="CondMode" type="TypeCondMode" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="TypePRactif">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="NomRef" type="TypeForAttributeNomRefSection" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="TypeLoiParam">
		<xs:attribute name="NomRef" type="TypeForAttributeNomRefDistant" use="required" />
		<xs:attribute name="Param" type="xs:IDREF" use="required" />
	</xs:complexType>
	<xs:complexType name="TypePID">
		<xs:simpleContent>
			<xs:extension base="TypeVec3d">
				<xs:attribute name="Param" type="xs:IDREF" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="ParamRegul">
		<xs:complexType>
			<xs:all>
				<xs:element name="PRactif" type="TypePRactif" />
				<xs:element name="ZprCns" type="TypeLoiParam" />
				<xs:element name="PID" type="TypePID" />
				<xs:element name="Qbg1Res" type="TypeDoublePositiveOrNull" />
				<xs:element name="Qbg2Res" type="xs:double" minOccurs="0" />
				<xs:element name="Qbg2" type="TypeLoiParam" minOccurs="0" />
				<xs:element name="Qusi" type="TypeLoiParam" minOccurs="0" />
				<xs:element name="QobjMin" type="xs:double" minOccurs="0" />
				<xs:element name="DqobjMin" type="xs:double" minOccurs="0" />
				<xs:element name="DqobjMax" type="xs:double" minOccurs="0" />
				<xs:element name="DqusiMin" type="xs:double" minOccurs="0" />
				<xs:element name="DqusiMax" type="xs:double" minOccurs="0" />
				<xs:element name="Dqbg1Min" type="xs:double" minOccurs="0" />
				<xs:element name="Dqbg1Max" type="xs:double" minOccurs="0" />
				<xs:element name="Dqbg2Min" type="xs:double" minOccurs="0" />
				<xs:element name="Dqbg2Max" type="xs:double" minOccurs="0" />
				<xs:element name="QcaAmMax" type="xs:double" minOccurs="0" />
				<xs:element name="QcaCmMax" type="xs:double" minOccurs="0" />
				<xs:element name="QcaAvMax" type="xs:double" minOccurs="0" />
				<!--<xs:element name="Dqbg1Seuil" type="xs:double" minOccurs="0" />
				<xs:element name="Dqbg1Pas" type="xs:double" minOccurs="0" />-->
			</xs:all>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="LoiRegul">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="CondRegul" />
				<xs:element ref="ParamRegul" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="LoiReguls">
		<xs:complexType>
			<xs:sequence>
				<xs:element  ref="LoiRegul" maxOccurs="unbounded" minOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<!-- GENERAL -->
	<xs:element name="DREG">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Commentaire" minOccurs="0" />
				<xs:element ref="TypeRegul" />
				<xs:element ref="ParamRegulCommun" />
				<xs:element ref="DefQreguls" />
				<xs:element ref="LoiReguls" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

</xs:schema>